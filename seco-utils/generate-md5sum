#!/usr/bin/perl
#!/usr/local/bin/perl -w

use strict;
use Getopt::Long qw/:config require_order gnu_compat/;

my %opt = ( 'i|ignore-dirs=s' => "Comma-separated list of dirs to ignore",
            'h|help' => "Display this help" );

my %o;
usage() unless GetOptions(\%o, keys %opt);
usage() if $o{h};

$ENV{PATH}="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin";
my @ignore = ();

@ignore = split /,/, $o{i} if($o{i});

my $dir = $ARGV[0];

usage("Directory not provided") unless defined($dir);
usage("Directory doesn't exist") unless(-d $dir);

my $md5sum;
my @files = findfiles($dir);

chdir($dir);
for (@files) {
    s/^$dir\///;
    $md5sum .= `/usr/bin/md5sum $_`;
}

print $md5sum;

sub findfiles {
    my $dirname = shift;

    for (@ignore) {
        return if($dirname eq "$dir/$_");
    }
    
    my @files;
    my $dh;
    opendir $dh, $dirname or die "Unable to opendir $dirname";
    while(my $file = readdir($dh)) {
        next if($file =~ /^\./);
        push @files, "$dirname/$file" if(-f "$dirname/$file");
        push @files, findfiles("$dirname/$file") if(-d "$dirname/$file");
    }
    closedir $dh;
    
    return @files;
}

sub usage {
        my $msg = shift;
    $msg = "\n$msg\n" if($msg);
    $msg ||= '';

    print "Usage: $0 [options] dir\n";

    my @array;
    foreach my $key (keys %opt) {
        my ($left, $right) = split /[=:]/, $key;
        my ($a, $b) = split /\|/, $left;
        if($b) {
            $left = "-$a, --$b";
        } else {
            $left = "    --$a";
        }
        $left = substr($left . (' 'x20), 0, 20);
        push @array, "$left $opt{$key}\n";
    }

    print sort @array;

    die "$msg\n";
}
